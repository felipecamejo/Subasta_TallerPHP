#!/bin/bash

# Script para probar la configuraci√≥n de email en Docker
# Ejecutar desde la ra√≠z del proyecto

echo "üß™ Probando configuraci√≥n de email..."

# Verificar que los contenedores est√©n corriendo
if ! docker ps | grep -q "laravel_app"; then
    echo "‚ùå El contenedor laravel_app no est√° corriendo"
    echo "üí° Ejecuta: docker-compose up -d"
    exit 1
fi

echo "üìã Configuraci√≥n actual de email:"
docker exec laravel_app php -r "
echo 'MAIL_MAILER: ' . env('MAIL_MAILER') . PHP_EOL;
echo 'MAIL_HOST: ' . env('MAIL_HOST') . PHP_EOL;
echo 'MAIL_PORT: ' . env('MAIL_PORT') . PHP_EOL;
echo 'MAIL_USERNAME: ' . env('MAIL_USERNAME') . PHP_EOL;
echo 'MAIL_FROM_ADDRESS: ' . env('MAIL_FROM_ADDRESS') . PHP_EOL;
echo 'MAIL_ENCRYPTION: ' . env('MAIL_ENCRYPTION') . PHP_EOL;
"

echo ""
echo "üîç Probando conexi√≥n SMTP..."
docker exec laravel_app php artisan tinker --execute="
try {
    \Mail::raw('Email de prueba desde Docker', function(\$message) {
        \$message->to('test@example.com')
                ->subject('Prueba de configuraci√≥n de email');
    });
    echo '‚úÖ Configuraci√≥n de email exitosa' . PHP_EOL;
} catch (Exception \$e) {
    echo '‚ùå Error en configuraci√≥n de email: ' . \$e->getMessage() . PHP_EOL;
}
"

echo ""
echo "üìß Para probar el env√≠o real de emails:"
echo "1. Reg√≠strate como nuevo usuario en la aplicaci√≥n"
echo "2. Verifica que llegue el email de confirmaci√≥n"
echo "3. Revisa los logs: docker-compose logs app"
